README file that includes instructions on how to use the project.

## Data structures we used:
1. Queues
2. Hashmaps/HashTables
3. LinkedList



Why we choose the different data structures:

Queue - we chose queues to represent the lanes. Each lane is has two ways. One for vehicles coming into the intersection
and one for cars going out of the intersection.
We choose queues to model the first-in, first-out behavior of vehicles in the output lanes. 
When a vehicle arrives, it is added to the end of the queue, and when it's time to move, the vehicle is removed from the front. 


LinkedList - We used LinkedList to store the vehicles. The first LinkedList stored vehicles going into another lane and the
other vehicles coming into the lane. We choose LinkedList because it efficiently supports insertion and removal from both 
ends of the queue.


HashMap (Hashtable) - We used the hashtabel to store the statistics of the cars. For example, the number of normal and emergency
cars that passed as well as the average waiting time at the traffic light.
HashTables provide constant-time average-case complexity for search, insertion, and deletion operations. 
They could be useful if you need to quickly look up information about specific vehicles or perform other operations that 
benefit from fast key-based access.

